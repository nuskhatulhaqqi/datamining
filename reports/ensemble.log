Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.8/dist-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.8/dist-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Create a Randomforest classifier
forest = RandomForestClassifier(n_estimators=100,
                                random_state=123)

# Create a XGBoost classifier
boost = XGBClassifier(random_state=123, verbosity=0, use_label_encoder=False)

# Create a Logistic regression classifier

knnclassifier = KNeighborsClassifier(n_neighbors=10)

# Create a stacking classifier

estimators = [
     ('rf', forest),
     ('xgb', boost)
]
sclf = StackingClassifier(estimators=estimators,
                            final_estimator=knnclassifier,
                            cv=10)

# Fit the random forest classifier; Print the scores

forest.fit(X_train, y_train)
print(f"Random forest model training Accuracy: {forest.score(X_train, y_train):0.2f}")
print(f"Random forest model test Accuracy: {forest.score(X_test, y_test):0.2f}")

# Fit the XGBoost classifier; Print the scores

boost.fit(X_train, y_train)
print(f"\nXGBoost model training Accuracy: {boost.score(X_train, y_train):0.2f}")
print(f"XGBoost model test Accuracy: {boost.score(X_test, y_test):0.2f}")

# Fit the Stacking classifier; Print the scores

sclf.fit(X_train, y_train)
print(f"\nStacking classifier training Accuracy: {sclf.score(X_train, y_train):0.2f}")
print(f"Stacking classifier test Accuracy: {sclf.score(X_test, y_test):0.2f}")

------------------

[0;31m[0m
[0;31mNameError[0mTraceback (most recent call last)
[0;32m<ipython-input-19-704bd402dec3>[0m in [0;36m<module>[0;34m[0m
[1;32m     22[0m [0;31m# Fit the random forest classifier; Print the scores[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m     23[0m [0;34m[0m[0m
[0;32m---> 24[0;31m [0mforest[0m[0;34m.[0m[0mfit[0m[0;34m([0m[0mX_train[0m[0;34m,[0m [0my_train[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     25[0m [0mprint[0m[0;34m([0m[0;34mf"Random forest model training Accuracy: {forest.score(X_train, y_train):0.2f}"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     26[0m [0mprint[0m[0;34m([0m[0;34mf"Random forest model test Accuracy: {forest.score(X_test, y_test):0.2f}"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mNameError[0m: name 'X_train' is not defined
NameError: name 'X_train' is not defined

